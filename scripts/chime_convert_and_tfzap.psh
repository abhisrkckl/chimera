#!/usr/bin/env psrsh

#
# A PSRSH script to pre-process and conduct RFI mitigation on CHIME/Pulsar fold-mode data.
# This script contains the the commands which apply to all CHIME/Pulsar observations and
# attempts to make the output more closely match NANOGrav observations.
#
# There is an additional step which flags known bad channels based on information recorded
# by the CHIME X-engine GPUs, but this applies independently for each archive.
#

##################
# Pre-processing #
##################
# Convert to Stokes parameters (CHIME/Pulsar data is in Coherence state by default)
state Stokes


################################
# Automated RFI excision steps #
################################

# Zap the bandpass via median filtering outlier rejection
# (NOTE: the default window size is 21 channels)
zap median

# Zap channels and subintegrations based on outlier rejection
# within the time-frequency plane
zap tfzap stat=rms  # stat method is typically faster than exp method
zap tfzap smooth=2dmed  # smooth over 5 channels and 15 subints (default)
zap tfzap


#########################
# Manual excision steps #
#########################

# We know that, generally speaking, the first and last subintegrations
# are often incomplete and/or contain corrupted data as the backend
# begins/ends data acquisition.
zap subint 0 {$nsubint-1}
# TODO: In reality, since we're a transit telescope, we may actually want
# to regularly clip more of the beginning/end of observations, since the
# pulsar is drifting in/out of the static primary beam.

# Prior to September 2020, the vast majority of RFI originated from either
# the LTE cellular network, digital TV stations and a handful of narrow-band
# emitters.
zap chan 0 34-47 113-178 185-210 218-254 552-568 584-597 631-644 677-693 754-762 788-791 854-860 873-875 887

# The local 5G network signal came online gradually over a few days, thus
# only part of the nominal 5G band was initially corrupted. This affected
# data between: August 30-31, 2020, i.e., 59091 <= MJD < 59093, chans=444-469
if ($int[0]:mjd>=59091 && $int[0]:mjd<59093) zap chan 444-469

# The 5G network signal came fully online on: September 1, 2020, i.e., MJD >= 59093, chans=405-469
if ($int[0]:mjd>=59093) zap chan 405-469

# A new RFI band (origin unknown) appeared on: November 5, 2021, i.e., MJD >= 59523, chans=83-107
if ($int[0]:mjd>=59523) zap chan 83-107

# At this point, there may well be several channels or subintegrations
# where a large fraction of data have been flagged. Extend the mask by
# zapping channels where >75% of subintegrations are flagged AND by
# zapping subintegrations where >75% of channels are flagged.
zap extend tcutoff=0.75 fcutoff=0.75
zap extend


#####################
# Final conversions #
#####################

# Convert to PSRFITS format (CHIME/Pulsar data is Timer by default)
convert psrfits
# TODO: Eventually we will change the CHIME/Pulsar backend to write
# PSRFITS format data by default, at which point this becomes irrelevant
# but we can probably leave this step regardless as the archive won't
# be re-converted to the same format. The other option is to have this
# conversion statement in an `if` block with the date when the backend
# format change occured.

